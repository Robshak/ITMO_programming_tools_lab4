name: C++ Library Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install pip
        run: python get-pip.py

      - name: Install dependencies
        run: pip install unittest-xml-reporting

      - name: Build C++ library
        run: |
          mkdir build
          cd build
          cmake ../src
          cmake --build . --config Release

      - name: Run tests
        env:
          lib_name: "segment_tree.dll" # Windows
          lib_path: "${{ github.workspace }}\\build\\segment_tree.dll"
        if: runner.os == 'Windows'
        run: |
          python -m unittest discover -s tests -p "*.py"

      - name: Copy DLL for Windows
        if: runner.os == 'Windows'
        run: copy build\Release\segment_tree.dll tests\segment_tree.dll

      - name: Run tests (Linux)
        env:
          lib_name: "libsegment_tree.so" # Linux
          lib_path: "${{ github.workspace }}/build/libsegment_tree.so"
        if: runner.os == 'Linux'
        run: |
          python -m unittest discover -s tests -p "*.py"
